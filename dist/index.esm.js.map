{"version":3,"file":"index.esm.js","sources":["../src/PixelBar.vue","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["<template>\r\n  <div id=\"center\" :class=\"classBar\">\r\n    <span class=\"content\">\r\n      <slot :count=\"animatedCount\" />\r\n    </span>\r\n    <div id=\"main\" :style=\"{'width':`${animatedCount/maxValue*100}%`}\"></div>\r\n    <div class=\"container-pixel\" :class=\"{'disabled':count/maxValue*100>100}\">\r\n      <div class=\"row\" id=\"r-four\">\r\n        <span class=\"sq\" id=\"sq-10\"></span>\r\n        <span class=\"sq\" id=\"sq-11\"></span>\r\n        <span class=\"sq\" id=\"sq-12\"></span>\r\n      </div>\r\n      <div class=\"row\" id=\"r-three\">\r\n        <span class=\"sq\" id=\"sq-7\"></span>\r\n        <span class=\"sq\" id=\"sq-8\"></span>\r\n        <span class=\"sq\" id=\"sq-9\"></span>\r\n      </div>\r\n      <div class=\"row\" id=\"r-two\">\r\n        <span class=\"sq\" id=\"sq-4\"></span>\r\n        <span class=\"sq\" id=\"sq-5\"></span>\r\n        <span class=\"sq\" id=\"sq-6\"></span>\r\n      </div>\r\n      <div class=\"row\" id=\"r-one\">\r\n        <span class=\"sq\" id=\"sq-1\"></span>\r\n        <span class=\"sq\" id=\"sq-2\"></span>\r\n        <span class=\"sq\" id=\"sq-3\"></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"pixel-bar\",\r\n  props: {\r\n    value: {\r\n      type: Number,\r\n      default: 2000,\r\n    },\r\n    maxValue: {\r\n      type: Number,\r\n      default: 2000,\r\n    },\r\n    duration: {\r\n      type: Number,\r\n      default: 4000,\r\n    },\r\n    play: {\r\n      type: Boolean,\r\n      default:false\r\n    },\r\n    classBar: {\r\n      type: String,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      count: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    animatedCount: function () {\r\n      return this.count.toFixed(0);\r\n    },\r\n  },\r\n  mounted(){\r\n    if(this.play)\r\n    this.countTo()\r\n  },\r\n  methods: {\r\n    countTo() {\r\n      const _c = this.value / this.maxValue;\r\n\r\n      const interval = setInterval(() => {\r\n        if (this.count > this.value) clearInterval(interval);\r\n\r\n        this.count += this.value / (_c * 100);\r\n      }, parseInt((this.duration) / (_c * 100)));\r\n    },\r\n  },\r\n  watch: {\r\n    play() {\r\n      this.countTo();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#center {\r\n  height: 2vw;\r\n  width: 100%;\r\n  display: flex;\r\n  position: relative;\r\n  justify-content: flex-start;\r\n  background: rgba(0, 0, 0, 1);\r\n  border: 1px solid rgba(255, 255, 255, 1);\r\n  border-radius: 2px;\r\n  transition: 1s;\r\n}\r\n.content {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0px;\r\n  z-index: 10;\r\n  left: 0px;\r\n  right: 0px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #fff;\r\n  font-size: 20px;\r\n}\r\n#main {\r\n  width: 200px;\r\n  height: 100%;\r\n  background: #92c81a;\r\n  float: left;\r\n  position: relative;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.container-pixel {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n.row {\r\n  width: 5px;\r\n  height: 33%;\r\n  background: #92c81a;\r\n  float: right;\r\n}\r\n\r\n.sq {\r\n  height: 100%;\r\n  width: 5px;\r\n  float: left;\r\n}\r\n\r\n#sq-2 {\r\n  background: #4a672f;\r\n}\r\n#sq-3 {\r\n  background: #1d2019;\r\n}\r\n#sq-6 {\r\n  background: #2c341c;\r\n}\r\n#sq-1,\r\n#sq-5,\r\n#sq-9 {\r\n  background: #74b215;\r\n}\r\n#sq-4,\r\n#sq-8,\r\n#sq-12 {\r\n  background: #7bc415;\r\n}\r\n\r\n#sq-7,\r\n#sq-10,\r\n#sq-11 {\r\n  background: #92c81a;\r\n}\r\n.disabled {\r\n  display: none;\r\n}\r\n</style>","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import VuePixelBar from \"./PixelBar.vue\";\r\n\r\nObject.defineProperty(VuePixelBar, 'install', {\r\n\tvalue(Vue) {\r\n        Vue.component(\"vue-pixel-bar\",VuePixelBar)\r\n\t}\r\n})\r\n\r\nexport default VuePixelBar\r\n"],"names":["normalizeComponent","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","hook","render","staticRenderFns","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","css","ref","insertAt","document","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Object","defineProperty","VuePixelBar","value","Vue","component"],"mappings":";;;;;AAgCA,kjBChCA,SAASA,EAAmBC,EAAUC,EAAOC,EAAQC,EAASC,EAAsBC,EAAoCC,EAAYC,EAAgBC,EAAmBC,GACzI,kBAAfH,IACPE,EAAoBD,EACpBA,EAAiBD,EACjBA,GAAa,GAGjB,MAAMI,EAA4B,mBAAXR,EAAwBA,EAAOQ,QAAUR,EAehE,IAAIS,EAmCJ,GAhDIX,GAAYA,EAASY,SACrBF,EAAQE,OAASZ,EAASY,OAC1BF,EAAQG,gBAAkBb,EAASa,gBACnCH,EAAQI,WAAY,EAEhBV,IACAM,EAAQK,YAAa,IAIzBZ,IACAO,EAAQM,SAAWb,GAGnBE,GAEAM,EAAO,SAAUM,IAEbA,EACIA,GACKC,KAAKC,QAAUD,KAAKC,OAAOC,YAC3BF,KAAKG,QAAUH,KAAKG,OAAOF,QAAUD,KAAKG,OAAOF,OAAOC,aAElB,oBAAxBE,sBACnBL,EAAUK,qBAGVrB,GACAA,EAAMsB,KAAKL,KAAMV,EAAkBS,IAGnCA,GAAWA,EAAQO,uBACnBP,EAAQO,sBAAsBC,IAAIpB,IAK1CK,EAAQgB,aAAef,GAElBV,IACLU,EAAOL,EACD,SAAUW,GACRhB,EAAMsB,KAAKL,KAAMT,EAAqBQ,EAASC,KAAKS,MAAMC,SAASC,cAErE,SAAUZ,GACRhB,EAAMsB,KAAKL,KAAMX,EAAeU,MAGxCN,EACA,GAAID,EAAQK,WAAY,CAEpB,MAAMe,EAAiBpB,EAAQE,OAC/BF,EAAQE,OAAS,SAAkCmB,EAAGd,GAElD,OADAN,EAAKY,KAAKN,GACHa,EAAeC,EAAGd,QAG5B,CAED,MAAMe,EAAWtB,EAAQuB,aACzBvB,EAAQuB,aAAeD,EAAW,GAAGE,OAAOF,EAAUrB,GAAQ,CAACA,GAGvE,OAAOT,GCxEX,SAAqBiC,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DvC,EAAQqC,SAASG,cAAc,SACnCxC,EAAMyC,KAAO,WAEI,QAAbL,GACEE,EAAKI,WACPJ,EAAKK,aAAa3C,EAAOsC,EAAKI,YAKhCJ,EAAKM,YAAY5C,GAGfA,EAAM6C,WACR7C,EAAM6C,WAAWC,QAAUZ,EAE3BlC,EAAM4C,YAAYP,SAASU,eAAeb,8xBFrB9C,6nDGAAc,OAAOC,eAAeC,EAAa,UAAW,CAC7CC,eAAMC,GACCA,EAAIC,UAAU,gBAAgBH"}